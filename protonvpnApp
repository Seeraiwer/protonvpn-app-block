#!/bin/env bash

# Path to the ProtonVPN log file
LOG_FILE="$HOME/.cache/Proton/VPN/logs/vpn-app.log"

# Read the content of the log file
OUTPUT=$(tail -n 20 "$LOG_FILE")

# Define the string to check if no VPN connection is active
DISCONNECTED='Disconnected'

# Check if the log output mentions a disconnection
if echo "$OUTPUT" | grep -q "$DISCONNECTED"; then
    echo "No VPN"
    echo "#FF0000"  # Red for no VPN
    exit 0
fi

# Extract the IP address and server name from the log output
NEW_IP=$(echo "$OUTPUT" | grep -oP 'IP:\s*\K[\d\.]+' | tail -n 1)
NEW_SERVER=$(echo "$OUTPUT" | grep -oP 'Server:\s*\K[^/ ]+' | tail -n 1)

# Check if we retrieved valid values (if not disconnected)
if [[ -z "$NEW_IP" || -z "$NEW_SERVER" ]]; then
    echo "Connecting..."
    echo "#FFFF00"  # Yellow for connection in progress
    exit 0
fi

# Check internet connectivity with a ping
PING_RESULT=$(ping -c 1 -W 1 8.8.8.8 2>/dev/null)

if [[ $? -ne 0 ]]; then
    echo "Bad connection"
    echo "#FF0000"  # Red for unstable connection
    exit 1
fi

# Extract ping response time
PING_TIME=$(echo "$PING_RESULT" | grep -oP 'time=\K[\d\.]+' | tail -n 1)

# Define a latency threshold
THRESHOLD=100

if [[ -n "$PING_TIME" && $(echo "$PING_TIME > $THRESHOLD" | bc -l) -eq 1 ]]; then
    echo "High latency: ${PING_TIME} ms"
    echo "#FF0000"  # Red for high latency
else
    echo "$NEW_SERVER ($NEW_IP)"
    echo "#d335ff"  # Purple for active VPN
fi
