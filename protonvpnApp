#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'

LOG_FILE="${HOME:-$PWD}/.cache/Proton/VPN/logs/vpn-app.log"
DEBUG_FILE="/tmp/protonvpn_debug.log"

# Seuil de latence configurable
THRESHOLD="${LATENCY_THRESHOLD:-100}"

# H√¥te √† pinguer et param√®tres
PING_HOST="1.1.1.1"
PING_TIMEOUT=1     # timeout en secondes
PING_COUNT=2       # nombre de paquets ICMP

dbg() {
    printf '%s %s\n' "[$(date '+%Y-%m-%d %H:%M:%S')]" "$*" >> "$DEBUG_FILE"
}

error_exit() {
    echo "‚ö†Ô∏è $1" >&2
    dbg "ERROR: $1"
    exit "${2:-1}"
}

extract_last() {
    local pattern="$1"
    tail -n 30 "$LOG_FILE" \
      | grep -oP "$pattern" \
      | tail -n1 || true
}

check_log_file() {
    [[ -r "$LOG_FILE" ]] || error_exit "Impossible de lire le log VPN : $LOG_FILE" 2
}

# Timeout (secondes) et nombre de paquets
PING_TIMEOUT=1
PING_COUNT=2

check_ping() {
    local out time
    dbg "Tentative ping vers $PING_HOST (-c${PING_COUNT} -W${PING_TIMEOUT})"

    # Premier essai
    if ! out=$(ping -c"$PING_COUNT" -W"$PING_TIMEOUT" "$PING_HOST" 2>&1); then
        dbg "Ping √©chou√© vers $PING_HOST : $out"
        # Secours sur Google DNS
        dbg "Tentative ping secours vers 8.8.8.8 (-c${PING_COUNT} -W${PING_TIMEOUT})"
        if ! out=$(ping -c"$PING_COUNT" -W"$PING_TIMEOUT" 8.8.8.8 2>&1); then
            dbg "Ping secours √©chou√© : $out"
            return 1
        fi
    fi

    dbg "Ping r√©ussi : $out"

    # On extrait le temps moyen (rtt avg) dans la ligne "rtt min/avg/max/mdev"
    time=$(echo "$out" \
      | grep -oP '/\K[0-9\.]+(?=/[0-9\.]+ ms$)' \
      | tail -n1) || true

    echo "${time:-}"
}



# --- D√©marrage ---
: > "$DEBUG_FILE"
dbg "Script d√©marr√©"

check_log_file

# Extraction de l'√©tat VPN
VPN_STATE=$(extract_last 'CONN:STATE_CHANGED \| \K\w+')

# Extraction de l'IP : g√®re les deux syntaxes Some("...") et "..."
NEW_IP=$(extract_last 'device_ip:\s*(?:Some\()?"\K(?:\d{1,3}\.){3}\d{1,3}(?=")')

# Extraction du nom de serveur (FR#317) ; si vide, on prend le domaine
NEW_SERVER_NAME=$(extract_last 'Server:\s*\K[^/ ]+')
if [[ -z "$NEW_SERVER_NAME" ]]; then
    NEW_SERVER_NAME=$(extract_last 'Domain:\s*\K[^ ]+')
fi

dbg "VPN_STATE=$VPN_STATE, NEW_IP=${NEW_IP:-<vide>}, NEW_SERVER_NAME=${NEW_SERVER_NAME:-<vide>}"

# Si d√©connect√© ou pas d'IP
if [[ "$VPN_STATE" != "Connected" || -z "$NEW_IP" ]]; then
    echo "‚ö†Ô∏è No VPN ‚ö†Ô∏è"
    dbg "VPN non connect√© ou IP manquante"
    exit 0
fi

# Test de connectivit√©
if ! PING_TIME=$(check_ping); then
    echo "‚ö†Ô∏è Bad connection ‚ö†Ô∏è"
    dbg "√âchec du ping vers $PING_HOST"
    exit 1
fi
dbg "Ping vers $PING_HOST en ${PING_TIME} ms"

# V√©rification de la latence
if (( $(echo "$PING_TIME > $THRESHOLD" | bc -l) )); then
    echo "‚ö†Ô∏è High latency: ${PING_TIME} ms"
    dbg "Latence √©lev√©e (seuil=${THRESHOLD} ms)"
else
    if [[ -n "$NEW_SERVER_NAME" ]]; then
        echo "üü¢ $NEW_SERVER_NAME ($NEW_IP) ‚Äì ${PING_TIME} ms"
    else
        echo "üü¢ $NEW_IP ‚Äì ${PING_TIME} ms"
        dbg "Nom de serveur manquant, affichage de l'IP seule"
    fi
    dbg "VPN OK"
fi

exit 0
