#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'

# — Configuration —
PING_HOST="1.1.1.1"
PING_COUNT=2
PING_TIMEOUT=1

# — 1) Repère la connexion VPN active (wireguard ou tun, sauf tun0) —
vpn_line=$(
  nmcli -t -f NAME,TYPE,DEVICE connection show --active \
    | awk -F: '
        # TYPE == wireguard OU (TYPE == tun ET NAME != "tun0")
        $2=="wireguard" || ($2=="tun" && $1!="tun0") {
          print
          exit
        }'
)

if [[ -z "$vpn_line" ]]; then
  echo "⚠️ No VPN ⚠️"
  exit 0
fi

# — 2) Parse NAME, TYPE et DEVICE —
VPN_NAME=${vpn_line%%:*}
_rest=${vpn_line#*:}
VPN_TYPE=${_rest%%:*}
VPN_IFACE=${vpn_line##*:}

# — 3) Récupère l’IP assignée sur cette interface —
IP_ADDR=$(ip -4 addr show dev "$VPN_IFACE" \
          | awk '/inet / { sub(/\/.*/,"",$2); print $2; exit }')

if [[ -z "$IP_ADDR" ]]; then
  echo "⚠️ No VPN ⚠️"
  exit 0
fi

# — 4) Test de connectivité via l’interface VPN —
if ! ping -I "$VPN_IFACE" -c"$PING_COUNT" -W"$PING_TIMEOUT" "$PING_HOST" &>/dev/null; then
  echo "⚠️ No VPN ⚠️"
  exit 0
fi

LATENCY=$(ping -I "$VPN_IFACE" -c"$PING_COUNT" -W"$PING_TIMEOUT" "$PING_HOST" \
          | awk -F'/' 'END { print $5 }')

# — 5) Affichage final pour i3blocks/polybar —
echo "$VPN_NAME ($IP_ADDR) – ${LATENCY} ms"
exit 0
