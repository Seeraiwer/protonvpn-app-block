#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'

# ‚Äî Configuration ‚Äî
DEBUG_FILE="/tmp/protonvpn_debug.log"
THRESHOLD="${LATENCY_THRESHOLD:-100}"    # ms max acceptable
PING_HOST="1.1.1.1"
PING_TIMEOUT=1                           # secondes
PING_COUNT=2                             # paquets

# ‚Äî Helpers ‚Äî
dbg() {
  printf '%s %s\n' "[$(date '+%Y-%m-%d %H:%M:%S')]" "$*" >> "$DEBUG_FILE"
}

error_exit() {
  echo "‚ö†Ô∏è $1" >&2
  dbg "ERROR: $1"
  exit "${2:-1}"
}

check_ping() {
  local out time
  dbg "Ping $PING_HOST (-c${PING_COUNT} -W${PING_TIMEOUT})"
  if ! out=$(ping -c"$PING_COUNT" -W"$PING_TIMEOUT" "$PING_HOST" 2>&1); then
    dbg "Ping $PING_HOST failed: $out"
    dbg "Fallback ping 8.8.8.8"
    if ! out=$(ping -c"$PING_COUNT" -W"$PING_TIMEOUT" 8.8.8.8 2>&1); then
      dbg "Fallback ping failed: $out"
      return 1
    fi
  fi
  dbg "Ping success: $out"
  time=$(echo "$out" \
    | grep -oP '/\K[0-9\.]+(?=/[0-9\.]+ ms$)' \
    | tail -n1) || true
  echo "${time:-}"
}

# ‚Äî Start fresh debug ‚Äî
: > "$DEBUG_FILE"
dbg "Script d√©marr√©"

# ‚Äî 1) Tentative via CLI ProtonVPN si dispo ‚Äî
if command -v protonvpn &>/dev/null; then
  dbg "Using protonvpn CLI"
  status=$(protonvpn status 2>&1) || status=""
  dbg "CLI output: $status"

  if ! grep -qE '^Status:\s+Connected' <<<"$status"; then
    echo "‚ö†Ô∏è No VPN ‚ö†Ô∏è"
    dbg "CLI reports not connected"
    exit 0
  fi

  NEW_SERVER_NAME=$(awk -F': ' '/^Server Name:/{print $2}' <<<"$status" | xargs)
  NEW_IP=$(awk -F': ' '/^Current IP:/{print $2}' <<<"$status" | xargs)

# ‚Äî 2) Fallback sur interface WireGuard/TUN ‚Äî
else
  dbg "CLI absent, fallback on interface detection"
  if ip link show wg0 &>/dev/null; then
    IFACE=wg0
  elif ip link show tun0 &>/dev/null; then
    IFACE=tun0
  else
    echo "‚ö†Ô∏è No VPN ‚ö†Ô∏è"
    dbg "No wg0 or tun0 interface"
    exit 0
  fi

  dbg "Interface detected: $IFACE"
  NEW_IP=$(ip -4 addr show dev "$IFACE" \
    | awk '/inet / {print $2}' \
    | cut -d/ -f1 \
    | head -n1)

  # On n‚Äôa pas toujours le nom, on laisse vide
  NEW_SERVER_NAME=""
fi

dbg "Extracted ‚Üí Server='${NEW_SERVER_NAME:-<none>}', IP='${NEW_IP:-<none>}'"

# ‚Äî Si on n‚Äôa toujours pas d‚ÄôIP, on arr√™te ‚Äî
if [[ -z "${NEW_IP:-}" ]]; then
  echo "‚ö†Ô∏è No VPN ‚ö†Ô∏è"
  dbg "No IP found"
  exit 0
fi

# ‚Äî Test de connectivit√© ‚Äî
if ! PING_TIME=$(check_ping); then
  echo "‚ö†Ô∏è Bad connection ‚ö†Ô∏è"
  dbg "No internet via VPN"
  exit 1
fi
dbg "Latency measured: ${PING_TIME} ms"

# ‚Äî Analyse et affichage final ‚Äî
if (( $(echo "$PING_TIME > $THRESHOLD" | bc -l) )); then
  echo "‚ö†Ô∏è High latency: ${PING_TIME} ms"
  dbg "Latency > ${THRESHOLD} ms"
else
  if [[ -n "$NEW_SERVER_NAME" ]]; then
    echo "üü¢ $NEW_SERVER_NAME ($NEW_IP) ‚Äì ${PING_TIME} ms"
  else
    echo "üü¢ $NEW_IP ‚Äì ${PING_TIME} ms"
  fi
  dbg "VPN OK"
fi

exit 0
